colCustom = keyvals,
#                col=c('grey60', 'grey60', 'grey60', color.palette0(2)[2]),
colAlpha = 0.9,
gridlines.minor = FALSE,
gridlines.major = T,
legendPosition = 'right')
keyvals = ifelse(out$gene_name %in% p_cell_highlight$V1   , 'blue',ifelse(out$gene_name %in% germline_oma_1$gene_id , 'green','#F3F3F3'))
View(p_cell_highlight)
keyvals = ifelse(out$gene_name %in% p_cell_highlight$V1   , 'blue',ifelse(out$gene_name %in% germline_oma_1$gene_id , 'green','#F3F3F3'))
names(keyvals)[keyvals == 'blue'] <- 'All P-cell transcripts'
names(keyvals)[keyvals == 'green'] <- 'OMA-1 binding'
names(keyvals)[keyvals == '#F3F3F3'] <- ''
EnhancedVolcano(out,
xlim = c(-10, 7),
ylim = c(0, 3.5),
lab = out$gene_name,
x = 'logFC',
y = 'FDR',
title = 'Translational efficiency',
subtitle = NULL ,
axisLabSize = 14,
titleLabSize = 16,
subtitleLabSize = 14,
legendIconSize = 2.0,
legendLabSize = 12,
pCutoff = 0.05,
FCcutoff = 0,
cutoffLineType = 'blank',
vline = c(0),
#                vlineCol = c('grey50', 'grey0','grey50'),
labSize = 0,
vlineType = 'blank',
vlineWidth = 0.5,
drawConnectors = FALSE,
pointSize = c(ifelse(
out$gene_name %in% P_cell_highlight$V1   ,
2 ,
ifelse(
out$gene_name %in% germline_oma_1$gene_id,
2,
0.5))),
caption = "",
legendLabels = c("NS", "NS", "NS", "5% FDR"),
widthConnectors = 0.5,
colConnectors = 'black',
colCustom = keyvals,
#                col=c('grey60', 'grey60', 'grey60', color.palette0(2)[2]),
colAlpha = 0.9,
gridlines.minor = FALSE,
gridlines.major = T,
legendPosition = 'right')
EnhancedVolcano(out,
xlim = c(-10, 7),
ylim = c(0, 3.5),
lab = out$gene_name,
x = 'logFC',
y = 'FDR',
title = 'Translational efficiency',
subtitle = NULL ,
axisLabSize = 14,
titleLabSize = 16,
subtitleLabSize = 14,
legendIconSize = 2.0,
legendLabSize = 12,
pCutoff = 0.05,
FCcutoff = 0,
cutoffLineType = 'blank',
vline = c(0),
#                vlineCol = c('grey50', 'grey0','grey50'),
labSize = 0,
vlineType = 'blank',
vlineWidth = 0.5,
drawConnectors = FALSE,
pointSize = c(ifelse(
out$gene_name %in% p_cell_highlight$V1   ,
2 ,
ifelse(
out$gene_name %in% germline_oma_1$gene_id,
2,
0.5))),
caption = "",
legendLabels = c("NS", "NS", "NS", "5% FDR"),
widthConnectors = 0.5,
colConnectors = 'black',
colCustom = keyvals,
#                col=c('grey60', 'grey60', 'grey60', color.palette0(2)[2]),
colAlpha = 0.9,
gridlines.minor = FALSE,
gridlines.major = T,
legendPosition = 'right')
keyvals = ifelse(out$gene_name %in% p_cell_highlight$V1   , 'blue',ifelse(out$gene_name %in% germline_oma_1$gene_id , 'green','#F3F3F3'))
names(keyvals)[keyvals == 'blue'] <- 'All P-cell transcripts'
names(keyvals)[keyvals == 'green'] <- 'OMA-1 binding'
names(keyvals)[keyvals == '#F3F3F3'] <- ''
EnhancedVolcano(out,
xlim = c(-10, 7),
ylim = c(0, 3.5),
lab = out$gene_name,
x = 'logFC',
y = 'FDR',
title = 'Translational efficiency',
subtitle = NULL ,
axisLabSize = 14,
titleLabSize = 16,
subtitleLabSize = 14,
legendIconSize = 2.0,
legendLabSize = 12,
pCutoff = 0.05,
FCcutoff = 0,
cutoffLineType = 'blank',
vline = c(0),
#                vlineCol = c('grey50', 'grey0','grey50'),
labSize = 0,
vlineType = 'blank',
vlineWidth = 0.5,
drawConnectors = FALSE,
pointSize = c(ifelse(
out$gene_name %in% p_cell_highlight$V1   ,
2 ,
ifelse(
out$gene_name %in% germline_oma_1$gene_id,
2,
0.5))),
caption = "",
legendLabels = c("NS", "NS", "NS", "5% FDR"),
widthConnectors = 0.5,
colConnectors = 'black',
colCustom = keyvals,
#                col=c('grey60', 'grey60', 'grey60', color.palette0(2)[2]),
colAlpha = 0.9,
gridlines.minor = FALSE,
gridlines.major = T,
legendPosition = 'right')
germline_oma_1 <- oma_highlight [oma_highlight$gene_id %in% p_cell_highlight$V1,]
keyvals = ifelse(out$gene_name %in% p_cell_highlight$V1   , 'blue',ifelse(out$gene_name %in% germline_oma_1$gene_id , 'green','#F3F3F3'))
names(keyvals)[keyvals == 'green'] <- 'OMA-1 binding'
names(keyvals)[keyvals == 'blue'] <- 'All P-cell transcripts'
names(keyvals)[keyvals == '#F3F3F3'] <- ''
EnhancedVolcano(out,
xlim = c(-10, 7),
ylim = c(0, 3.5),
lab = out$gene_name,
x = 'logFC',
y = 'FDR',
title = 'Translational efficiency',
subtitle = NULL ,
axisLabSize = 14,
titleLabSize = 16,
subtitleLabSize = 14,
legendIconSize = 2.0,
legendLabSize = 12,
pCutoff = 0.05,
FCcutoff = 0,
cutoffLineType = 'blank',
vline = c(0),
#                vlineCol = c('grey50', 'grey0','grey50'),
labSize = 0,
vlineType = 'blank',
vlineWidth = 0.5,
drawConnectors = FALSE,
pointSize = c(ifelse(
out$gene_name %in% p_cell_highlight$V1   ,
2 ,
ifelse(
out$gene_name %in% germline_oma_1$gene_id,
2,
0.5))),
caption = "",
legendLabels = c("NS", "NS", "NS", "5% FDR"),
widthConnectors = 0.5,
colConnectors = 'black',
colCustom = keyvals,
#                col=c('grey60', 'grey60', 'grey60', color.palette0(2)[2]),
colAlpha = 0.9,
gridlines.minor = FALSE,
gridlines.major = T,
legendPosition = 'right')
View(germline_oma_1)
keyvals = ifelse(out$gene_name %in% germline_oma_1$gene_id  , 'green','#F3F3F3')
names(keyvals)[keyvals == 'green'] <- 'OMA-1 binding'
names(keyvals)[keyvals == '#F3F3F3'] <- ''
EnhancedVolcano(out,
xlim = c(-10, 7),
ylim = c(0, 3.5),
lab = out$gene_name,
x = 'logFC',
y = 'FDR',
title = 'Translational efficiency',
subtitle = NULL ,
axisLabSize = 14,
titleLabSize = 16,
subtitleLabSize = 14,
legendIconSize = 2.0,
legendLabSize = 12,
pCutoff = 0.05,
FCcutoff = 0,
cutoffLineType = 'blank',
vline = c(0),
#                vlineCol = c('grey50', 'grey0','grey50'),
labSize = 0,
vlineType = 'blank',
vlineWidth = 0.5,
drawConnectors = FALSE,
pointSize = c(ifelse( out$gene_name %in% germline_oma_1$gene_id,
3,
0.5)),
caption = "",
legendLabels = c("NS", "NS", "NS", "5% FDR"),
widthConnectors = 0.5,
colConnectors = 'black',
colCustom = keyvals,
#                col=c('grey60', 'grey60', 'grey60', color.palette0(2)[2]),
colAlpha = 0.9,
gridlines.minor = FALSE,
gridlines.major = T,
legendPosition = 'right')
keyvals = ifelse(out$gene_name %in% germlxine_oma_1$gene_id  , 'green','#F3F3F3')
keyvals = ifelse(out$gene_name %in% germline_oma_1$gene_id  , 'green','#F3F3F3')
names(keyvals)[keyvals == 'green'] <- 'OMA-1 binding P-cell transcripts'
names(keyvals)[keyvals == '#F3F3F3'] <- ''
EnhancedVolcano(out,
xlim = c(-10, 7),
ylim = c(0, 3.5),
lab = out$gene_name,
x = 'logFC',
y = 'FDR',
title = 'Translational efficiency',
subtitle = NULL ,
axisLabSize = 14,
titleLabSize = 16,
subtitleLabSize = 14,
legendIconSize = 2.0,
legendLabSize = 12,
pCutoff = 0.05,
FCcutoff = 0,
cutoffLineType = 'blank',
vline = c(0),
#                vlineCol = c('grey50', 'grey0','grey50'),
labSize = 0,
vlineType = 'blank',
vlineWidth = 0.5,
drawConnectors = FALSE,
pointSize = c(ifelse( out$gene_name %in% germline_oma_1$gene_id,
3,
0.5)),
caption = "",
legendLabels = c("NS", "NS", "NS", "5% FDR"),
widthConnectors = 0.5,
colConnectors = 'black',
colCustom = keyvals,
#                col=c('grey60', 'grey60', 'grey60', color.palette0(2)[2]),
colAlpha = 0.9,
gridlines.minor = FALSE,
gridlines.major = T,
legendPosition = 'right')
# let us make a table with all FDR values:
out <- as.data.table(out)
ab_cell <- out[out$gene_name %in% AB_cell_highlight$V1,c("logFC","FDR")]
ab_cell [,regulation := ifelse(
ab_cell$FDR > 0.05,
"NS",
ifelse(ab_cell$logFC > 0,
"Up",
"Down")
)]
p_cell <- out [out$gene_name %in% p_cell_highlight$V1,c("logFC","FDR")]
ggplot() +
geom_boxplot(data = ab_cell,
aes(
y = "AB-cell",
x = logFC,
fill = "#FF787D"
)
) +
geom_boxplot(data = p_cell,
aes(
y = "P-cell",
x = logFC,
fill = "#92ABFF"
)
)+
scale_fill_manual(values = c( "#92ABFF","#FF787D"))+
theme_pubr()+
theme(axis.text = element_text(size = 15),
axis.title = element_text(size = 20))
oma_1_all <-  out [out$gene_name %in% oma_highlight$gene_id, c("logFC", "FDR")]
oma_1_ab_cell <- out [out$gene_name %in% somatic_oma_1$gene_id, c("logFC", "FDR")]
ggplot() +
geom_boxplot(data = oma_1_all ,
aes(
y = "All transcripts",
x = logFC,
fill = '#67FA5D'
)
) +
geom_boxplot(data = oma_1_ab_cell,
aes(
y = "AB-cell transcripts",
x = logFC,
fill = '#695736'
)
)+
scale_fill_manual(values = c("green", "#695736"))+
theme_pubr()+
theme(axis.text = element_text(size = 15),
axis.title = element_text(size = 20))
oma_1_p_cell<-out [out$gene_name %in% germline_oma_1$gene_id, c("logFC", "FDR")]
oma_1_all <-  out [out$gene_name %in% oma_highlight$gene_id, c("logFC", "FDR")]
oma_1_ab_cell <- out [out$gene_name %in% somatic_oma_1$gene_id, c("logFC", "FDR")]
oma_1_p_cell<-out [out$gene_name %in% germline_oma_1$gene_id, c("logFC", "FDR")]
ggplot() +
geom_boxplot(data = oma_1_all ,
aes(
y = "All transcripts",
x = logFC,
fill = '#67FA5D'
)
) +
geom_boxplot(data = oma_1_ab_cell,
aes(
y = "AB-cell transcripts",
x = logFC,
fill = 'red'
)
)+
geom_boxplot(data = oma_1_ab_cell,
aes(
y = "P-cell transcripts",
x = logFC,
fill = 'blue'
)
)+
scale_fill_manual(values = c("green", "#695736"))+
theme_pubr()+
theme(axis.text = element_text(size = 15),
axis.title = element_text(size = 20))
ggplot() +
geom_boxplot(data = oma_1_all ,
aes(
y = "All transcripts",
x = logFC,
fill = '#67FA5D'
)
) +
geom_boxplot(data = oma_1_ab_cell,
aes(
y = "AB-cell transcripts",
x = logFC,
fill = 'red'
)
)+
geom_boxplot(data = oma_1_p_cell,
aes(
y = "P-cell transcripts",
x = logFC,
fill = 'blue'
)
)+
scale_fill_manual(values = c("green", "#695736"))+
theme_pubr()+
theme(axis.text = element_text(size = 15),
axis.title = element_text(size = 20))
ggplot() +
geom_boxplot(data = oma_1_all ,
aes(
y = "All transcripts",
x = logFC,
fill = '#67FA5D'
)
) +
geom_boxplot(data = oma_1_ab_cell,
aes(
y = "AB-cell transcripts",
x = logFC,
fill = 'red'
)
)+
geom_boxplot(data = oma_1_p_cell,
aes(
y = "P-cell transcripts",
x = logFC,
fill = 'blue'
)
)+
scale_fill_manual(values = c("green", "red",'blue'))+
theme_pubr()+
theme(axis.text = element_text(size = 15),
axis.title = element_text(size = 20))
ggplot() +
geom_boxplot(data = oma_1_all ,
aes(
y = "All transcripts",
x = logFC,
fill = '#67FA5D'
)
) +
geom_boxplot(data = oma_1_ab_cell,
aes(
y = "AB-cell transcripts",
x = logFC,
fill = 'red'
)
)+
geom_boxplot(data = oma_1_p_cell,
aes(
y = "P-cell transcripts",
x = logFC,
fill = 'blue'
)
)+
scale_fill_manual(values = c("green", "red",'blue'))+
theme_pubr()+
theme(axis.text = element_text(size = 15),
axis.title = element_text(size = 20))
ggplot() +
ggplot() +
geom_boxplot(data = oma_1_all ,
aes(
y = "All transcripts",
x = logFC,
fill = '#67FA5D')
)+
geom_boxplot(data = oma_1_p_cell,
aes(
y = "P-cell transcripts",
x = logFC,
fill = 'blue')
)+
geom_boxplot(data = oma_1_ab_cell,
aes(
y = "AB-cell transcripts",
x = logFC,
fill = 'red')
)+
scale_fill_manual(values = c("green", "red",'blue'))+
theme_pubr()+
theme(axis.text = element_text(size = 15),
axis.title = element_text(size = 20))
keyvals = ifelse(out$logFC < 0 & out$FDR < 0.05, '#6e005f', 'grey60'))
names(keyvals)[keyvals == '#6e005f'] <- 'Increase from 1-cell to 2-cell'
names(keyvals)[keyvals == 'grey60'] <- ''
keyvals = ifelse(out$logFC < 0 & out$FDR < 0.05, '#6e005f', 'grey60')
names(keyvals)[keyvals == '#6e005f'] <- 'Increase from 1-cell to 2-cell'
names(keyvals)[keyvals == 'grey60'] <- ''
EnhancedVolcano(out,
xlim = c(-10, 7),
ylim = c(0, 3.5),
lab = out$gene_name,
x = 'logFC',
y = 'FDR',
title = NULL,
subtitle = NULL ,
axisLabSize = 28,
titleLabSize = 0,
subtitleLabSize = 28,
legendIconSize = 0,
legendLabSize = 0,
pCutoff = 0.05,
FCcutoff = 0.5,
cutoffLineType = 'blank',
vline = c(0),
#                vlineCol = c('grey50', 'grey0','grey50'),
vlineType = 'blank',
vlineWidth = 0.5,
drawConnectors = TRUE,
pointSize = c(ifelse(out$FDR< 0.05, 1, 0.2)),
caption = "",
legendLabels = c("NS", "NS", "NS", "5% FDR"),
widthConnectors = 0.5,
colConnectors = 'black',
colCustom = keyvals,
#                col=c('grey60', 'grey60', 'grey60', color.palette0(2)[2]),
colAlpha = 0.9,
gridlines.minor = FALSE,
gridlines.major = T,
legendPosition = 'right')
keyvals = ifelse(out$logFC > 0 & out$FDR < 0.05, '#045275', 'grey60')
keyvals = ifelse(out$logFC > 0 & out$FDR < 0.05, '#045275', 'grey60')
names(keyvals)[keyvals == '#045275'] <- 'Increase from 1-cell to 2-cell'
names(keyvals)[keyvals == 'grey60'] <- ''
EnhancedVolcano(out,
xlim = c(-10, 7),
ylim = c(0, 3.5),
lab = out$gene_name,
x = 'logFC',
y = 'FDR',
title = NULL,
subtitle = NULL ,
axisLabSize = 28,
titleLabSize = 0,
subtitleLabSize = 28,
legendIconSize = 0,
legendLabSize = 0,
pCutoff = 0.05,
FCcutoff = 0.5,
cutoffLineType = 'blank',
vline = c(0),
#                vlineCol = c('grey50', 'grey0','grey50'),
vlineType = 'blank',
vlineWidth = 0.5,
drawConnectors = TRUE,
pointSize = c(ifelse(out$FDR< 0.05, 1, 0.2)),
caption = "",
legendLabels = c("NS", "NS", "NS", "5% FDR"),
widthConnectors = 0.5,
colConnectors = 'black',
colCustom = keyvals,
#                col=c('grey60', 'grey60', 'grey60', color.palette0(2)[2]),
colAlpha = 0.9,
gridlines.minor = FALSE,
gridlines.major = T,
legendPosition = 'right')
