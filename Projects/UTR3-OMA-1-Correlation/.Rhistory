print "hello"
install.packages("tidyverse")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version="3.12")
BiocManager::install(pkgs = c("SummarizedExperiment","GEOquery"))
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.16")
library(ggplot2)
library(tidyverse)
install.packages(tidyverse)
install.packages("tidyverse")
install.packages("ggplot2")
library(boot)
detach("package:boot", unload = TRUE)
library("tidyverse")
library("broom")
library("knitr")
library("readxl")
raw_df <- readxl::read_xlsx("/Users/yashshukla/Downloads/ad_treatment.xlsx")
View(raw_df)
dplyr::glimpse(raw_df)
> raw_df <- readxl::read_xlsx("/Users/yashshukla/Downloads/ad_treatment.xlsx")
library("broom")
library("broom")
library("knitr")
library("readxl")
raw_df <- readxl::read_xlsx("/Users/yashshukla/Downloads/ad_treatment.xlsx")
ggplot(data = raw_df, aes (x = age)) +
geom_density(fill = "blue")
library("broom")
library("knitr")
library("readxl")
raw_df <- readxl::read_xlsx("/Users/yashshukla/Downloads/ad_treatment.xlsx")
ggplot(data = raw_df, aes (x = age)) +
geom_density(fill = "blue")
range(raw_df$age)
raw_df %>% summarize(
min = min(age),
max = max (age)
)
table(raw_df$drug_treatment,raw_df$health_status)
library("broom")
library("knitr")
library("readxl")
library("tidyverse")
raw_df <- readxl::read_xlsx("/Users/yashshukla/Downloads/41586_2005_BFnature03353_MOESM1_ESM (1).xls")
raw_df <- readxl::read_xlsx("/Users/yashshukla/Downloads/41586_2005_BFnature03353_MOESM1_ESM.xls")
library("tidyverse")
raw_df <- readxl::read_xlsx("/Users/yashshukla/Downloads/41586_2005_BFnature03353_MOESM1_ESM.xls",1)
install.packages("swirl")
knitr::opts_chunk$set(echo = TRUE)
plot(pressure)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
setwd("/Users/yashshukla/Documents/Computational/Celegans_riboITP/Projects/UTR3-OMA-1-Correlation")
# import the ribo file
original.ribo <- Ribo("data/celegans_duplicate_allstages.ribo")
#Here I'll be writing a script for analysing the 3'UTR of 1_cell stage
#see if it matches that of OMA-1 pulldown
library(ribor)
library(tidyverse)
library(readxl)
library(biomaRt)
library(conflicted)
library(tibble)
# import the ribo file
original.ribo <- Ribo("data/celegans_duplicate_allstages.ribo")
# import the ribo file
original.ribo <- Ribo("data/celegans_duplicate_allstages.ribo")
original.ribo
rc_UTR_1cell_A <- get_region_counts(ribo.object    = original.ribo,
range.lower = 25,
range.upper = 35,
tidy       = TRUE,
transcript = FALSE,
region     = "UTR3",
compact    = FALSE,
experiment = "1cell_A" )
rc_CDS_UTR3_1cell_A <- get_region_counts(ribo.object    = original.ribo,
range.lower = 25,
range.upper = 35,
tidy       = TRUE,
transcript = FALSE,
region     = c("CDS","UTR3"),
compact    = FALSE,
experiment = "1cell_A" )
rc_UTR_1cell_A_top_100 <- rc_UTR_1cell_A |>
arrange(desc(count)) |>
filter (count > 119)
conflicted::conflicts_prefer(dplyr::filter)
rc_UTR_1cell_A_top_100 <- rc_UTR_1cell_A |>
arrange(desc(count)) |>
filter (count > 119)
#let us make a cleanup function first
cleanup <- function(x) {
x |>
separate(transcript, sep = "gene:",  into = c('a','b'), extra = "merge") |>
separate(b,sep = ".1\\|gene_biotype:", extra = "merge", into = c ('Wbgene_id','d')) |>
dplyr::select(Wbgene_id)
}
wbgene_rc_UTR_1cell_A_top_100  <- cleanup(rc_UTR_1cell_A_top_100)
# import the excel file of oma-1 pull down
oma_1_pull_down_toplist <- read_excel("data/FPKM_OMA-1_Pull_down_wbgene.xlsx")
oma_1_pull_down_complete_list <- read_excel("data/FPKM_OMA-1_Pull_down.xlsx")
# Let us first clean up the oma_1_pull_down data
oma_1_pull_down_top_200 <- oma_1_pull_down_toplist |>
filter(FPKM > 480) |>
rename(Wbgene_id = converted_alias ) |>
select(Wbgene_id)
conflicted::conflicts_prefer(dplyr::select)
# finding number of overlap
overlapping_genes <- wbgene_rc_UTR_1cell_A_top_100 |>
semi_join(oma_1_pull_down_top_200 )
# Let us first clean up the oma_1_pull_down data
oma_1_pull_down_top_200 <- oma_1_pull_down_toplist |>
filter(FPKM > 480) |>
rename(Wbgene_id = converted_alias ) |>
select(Wbgene_id)
# finding number of overlap
overlapping_genes <- wbgene_rc_UTR_1cell_A_top_100 |>
semi_join(oma_1_pull_down_top_200 )
number_overlapping <- nrow(overlapping_genes)
count_greater_than_2_riboITP <- rc_CDS_UTR3_1cell_A |>
pivot_wider(
names_from = region,
values_from =count
) |>
mutate(Sum_CDS_UTR3 = CDS + UTR3) |>
filter(Sum_CDS_UTR3 > 1 )
Wbgene_count_greater_than_2_riboITP <-cleanup(count_greater_than_2_riboITP)
celegans_mart <- useMart(host = "https://metazoa.ensembl.org",
biomart = "metazoa_mart",
dataset = "celegans_eg_gene")
refseq_oma_1 <- oma_1_pull_down_complete_list |>
filter(FPKM > 1) |>
select (tracking_id)
ref_seq_oma_1_list <- pull(refseq_oma_1,tracking_id)
celegans_mart <- useMart(host = "https://metazoa.ensembl.org",
biomart = "metazoa_mart",
dataset = "celegans_eg_gene")
all_wbgene_oma_1 <- getBM(mart = celegans_mart,
filters = "refseq_mrna",
values = ref_seq_oma_1_list,
attributes = c("refseq_mrna", "ensembl_gene_id")) |>
select(ensembl_gene_id) |>
rename(Wbgene_id = ensembl_gene_id)
# finally we will get what is common between everything detected by OMA-1 and RiboITP
overlapping_genes_all <-  all_wbgene_oma_1 |>
semi_join(  Wbgene_count_greater_than_2_riboITP )
number_overlapping_all <- nrow(overlapping_genes_all)
number_overlapping_all
fmat = matrix (nrow =2, ncol = 2)
fmat[1,] = c(number_overlapping, nrow(wbgene_rc_UTR_1cell_A_top_100 ) - number_overlapping)
fmat[2,] = c(nrow(oma_1_pull_down_top_200) - number_overlapping, number_overlapping_all - nrow(oma_1_pull_down_top_200) - fmat[1,2])
statistical_test_results = fisher.test(fmat)
statistical_test_results
print(statistical_test_results$p.value)
overlapping_genes
View(rc_UTR_1cell_A)
